---
# 
# Copyright (c) 2017, Marcos Sungaila <msungaila@gmail.com>
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation 
# the rights to use, copy, modify, merge, publish, distribute, sublicense, 
# and/or sell copies of the Software, and to permit persons to whom the 
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included 
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS 
# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL 
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER 
# DEALINGS IN THE SOFTWARE.
#

#
# IMPORTANT
#
# This playbook does not check for external repos like EPEL or any other that
# can interfere on a system conversion.
# Please, refer to destination linux distro website to check any conversion
# restrictions or issues you may face.
#

- hosts: "{{ host }}"

  handlers:
    - name: restart sshd
      service: name=sshd state=restarted

  tasks:

    # Playbook tested on Red Hat version 6 and 7
    # For CentOS use instructions from https://linux.oracle.com/switch/centos/
    - name: abort playbook if not running on a tested O.S. and release
      fail: msg="Playbook not tested on this O.S. family and/or version, aborting execution"
      when:
        - (ansible_distribution != "RedHat" and ansible_distribution_major_version != "6")
        - (ansible_distribution != "RedHat" and ansible_distribution_major_version != "7")

    # SELinux python support packages
    # if selinux active, selinux python support packages are needed but not 
    # always installed.
    # need to configure oracle repo and install those support packages
    # changed from get_url to command module because failed when no 
    # libselinux-python package installed
    - name: "download Oracle Linux {{ ansible_distribution_major_version }} pubkey"
      command: curl -o /etc/pki/rpm-gpg/RPM-GPG-KEY-oracle -L "http://yum.oracle.com/RPM-GPG-KEY-oracle-ol{{ ansible_distribution_major_version }}"
      args:
        warn: no

    - name: "download Oracle Linux {{ ansible_distribution_major_version }} repofile"
      command: curl -o /etc/yum.repos.d/public-yum-ol{{ ansible_distribution_major_version }}.repo -L "http://yum.oracle.com/public-yum-ol{{ ansible_distribution_major_version }}.repo"
      args:
        warn: no

    - name: cleaning yum cache
      command: yum clean all
      args:
        warn: no

    - name: removing yum cache directory as recommend by yum clean all command
      file: path=/var/cache/yum state=absent

    - name: selinux python support packages
      yum: name=libselinux-python state=present
      when: ansible_selinux

    # End of SELinux prereqs

    - name: check if subscription-manager is available
      stat: path=/usr/sbin/subscription-manager
      register: subscription_manager

    # this task may receive an error if not registered to or no access to 
    # Red Hat so, ignore_errors only on this task
    - name: cleaning old subscription to redhat
      command: "{{ item }}"
      with_items:
        - subscription-manager unregister
        - subscription-manager clean
      when: (ansible_distribution == "RedHat" and subscription_manager.stat.exists == True)
      ignore_errors: yes

    - name: Removing subscription-manager packages
      yum: name=subscription-manager state=removed
      when: (ansible_distribution == "RedHat")

    - name: installing yum-utils package if needed
      yum: name=yum-utils state=present

    - name: disabling all repos
      command: yum-config-manager --disable "*"

    - name: enabling Oracle Linux minimum repos
      command: yum-config-manager --enable "{{ item }}"
      with_items:
        - "ol{{ ansible_distribution_major_version }}_latest"
        - "ol{{ ansible_distribution_major_version }}_UEKR5"
      when:
        - (ansible_distribution == "RedHat" and ansible_distribution_major_version == "7")

    - name: enabling Oracle Linux minimum repos
      command: yum-config-manager --enable "{{ item }}"
      with_items:
        - "ol{{ ansible_distribution_major_version }}_latest"
        - "ol{{ ansible_distribution_major_version }}_UEKR4"
      when:
        - (ansible_distribution == "RedHat" and ansible_distribution_major_version == "6")

    # There are many others repositories, here we have some of them
    #    - "ol{{ ansible_distribution_major_version }}_addons"
    #    - "ol{{ ansible_distribution_major_version }}_optional_latest"
    #    - "ol{{ ansible_distribution_major_version }}_developer_EPEL"
    # You can see a list of avaible repos no enabled using the following on
    # command line:
    # yum repolist enabled

    # -----------------------------------------------------------------------
    # BOP renaming a file
    #
    # until now there is no rename module for files or directories so we need
    # to make a backup of file before removing it
    - name: check if up2date file exists
      stat: path=/etc/sysconfig/rhn/up2date
      register: up2date_conf

    - name: make a copy of current up2date file
      copy: 
        remote_src: True 
        src: /etc/sysconfig/rhn/up2date
        dest: /etc/sysconfig/rhn/up2date.before-uln
      when: (ansible_distribution == "RedHat" and up2date_conf.stat.exists == True )

    # remove original up2date file because you will have a fresh copy from
    # rhn-client-tools package
    - name: remove old up2date file
      file: path=/etc/sysconfig/rhn/up2date state=absent
      when: (ansible_distribution == "RedHat")
    # 
    # EOP renaming a file
    # -----------------------------------------------------------------------

    # You need to upgrade yum packages in order to use recent yum repos.
    - name: installing prereq packages for migration to uln_register
      yum: name={{item}} state=latest
      with_items:
        - deltarpm
        - oracle-logos
        - oraclelinux-release
        - redhat-release-server
        - yum
        - rpm-libs
        - rpm
        - yum-metadata-parser
        - yum-utils
        - rpm-python
        - rhn-check
        - rhn-client-tools
        - rhn-client-tools-migrate
        - rhnlib
        - rhn-setup
        - yum-plugin-ulninfo
        - yum-rhn-plugin

    # This task can speed up initial connections to ssh servers.
    # Check if there's no security issues for you when enabling this conf.
    - name: disabling SSH dns reverse check
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?UseDNS yes'
        line: 'UseDNS no'
      notify: restart sshd

